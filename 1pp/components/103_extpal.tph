/* ================================================================================================================================================================================== *
 *  v 4.2.0                                                                                                                                                                           *
 *                                F O R C E D   C O M P O N E N T   :   E x t e n d e d   p a l e t t e   e n t r i e s   ( f u l l   i n s t a l l )                                 *
 *                                                                                                                                                                                    *
 * ================================================================================================================================================================================== *
 *  This component adds new colour gradients to Infinity Engine games, raising the count of available colours from 116 to 256. It also includes a new random colour table making      *
 *  use of them for Baldur's Gate II and new colour set files for Icewind Dale II, giving you more skin/hair colour choices for the various races.                                    *
 *  It also fixes a few minor problems with standard gradients.                                                                                                                       *
 *  This part is a complete install patching the game executable, enabling full use of the extended colour entries.                                                                   *
 * ================================================================================================================================================================================== *
 *  change-log:                                                                                                                                                                       *
 *  -----------                                                                                                                                                                       *
 *      - Coding simplification:                                                                                                                                                      *
 *          Replaced `GAME_IS` conditions with variables checks to speed up install time.                                                                                             *
 *          Copied entire folders instead of infinite lines (COPY ~1pp/folder/file.ext~ ~override~ or ACTION_FOR_EACH file IN list BEGIN COPY ~1pp/folder/file.ext~ ~override~ END).  *
 * ================================================================================================================================================================================== */

// -------------------------------- //
//  GAME                      line  //
// -------------------------------- //
//  BG2-ToB                 #   57  //
//  IWD                     #  107  //
//  IWD2                    #  157  //
//  WRITE COLOURS           #  207  //
//  TOB COLOURS             #  302  //
// -------------------------------- //

OUTER_SET fail = 0
OUTER_SET bpoff = 0x36

PRINT @103000 // ~Reading settings...~
SILENT

COPY ~1pp/core/1pp_ext_pal/files/__setting.bmp~ ~1pp/core/1pp_ext_pal/files/__setting.bmp~
	PATCH_IF (SOURCE_SIZE = 1336) BEGIN
		FOR (i = 0 ; i < 256 ; ++i) BEGIN
			READ_LONG (bpoff + (~%i%~*4)) rdgrd
			SET $gradint(~%i%~) = ((rdgrd & 0x000000ff) << 16 | (rdgrd & 0x0000FF00) | (rdgrd & 0x00FF0000) >> 16)
		END
	END ELSE BEGIN
		PATCH_PRINT @103001 // ~__setting.bmp appears to be invalid.~
		SET fail = 1
	END

ACTION_IF (fail == 1) BEGIN
	FAIL @103002 // ~Error occurred during installation.~
END


// Write references
OUTER_SET tryweird = 0

PRINT @103003 // ~Patching...~
SILENT

/* ========= *
 *  BG2-ToB  *
 * ========= */

ACTION_IF (is_bg2 OR is_tob OR is_tutu) BEGIN // GAME_IS ~bg2 tob tutu tutu_totsc ca~

	COPY ~bgmain.exe~ ~bgmain.exe~
		// determine which version of the game is used
		PATCH_IF (SOURCE_SIZE == 7839790 || SOURCE_SIZE == 7843840) BEGIN	// ToB v26498
			PATCH_PRINT @103004 // ~ToB v26498 found.~
			PATCH_SILENT
			SET replace_pattern = 0x00AB9B78
			SET replace_value = 0x00B037B0
			// write new links ToB
			PATCH_FOR_EACH address IN 0x64D2E 0x6BB9B 0x6C062 0xA82A8 0xA82E6 0xA8B27 0xADD67 0xAF765 0xE44F4 0xE607F 0xE741E 0x102934 0x10458C 0x1082BB 0x108B8B 0x120732 0x1209CB 0x120CB5 0x12A37E 0x12F4D1 0x131A29 0x139D8C 0x13A053 0x13AADD 0x13ADA4 0x148C96 0x148E62 0x3FC25C 0x4A3DDB 0x4A4C96 0x4D1D51 0x4FAE8F 0x50B939 BEGIN
				READ_LONG %address% %check_v%
				PATCH_IF (%check_v% = %replace_pattern%) BEGIN
					WRITE_LONG address %replace_value%
				END ELSE BEGIN
					PATCH_PRINT @103005 // ~failed at %address%~
					PATCH_PRINT @103006 // ~found %check_v%, should be %replace_pattern%~
					SET fail = 1
				END
			END
		END
		ELSE PATCH_IF (SOURCE_SIZE == 7417902) BEGIN	// SoA v23037
			PATCH_PRINT @103007 // ~SoA v23037 found.~
			PATCH_SILENT
			SET replace_pattern = 0x00A5B200
			SET replace_value = 0x00AA1728
			// write new links SoA
			PATCH_FOR_EACH address IN 0x61AAE 0x680F2 0x68585 0xA0FE7 0xA1779 0xA61B7 0xA78F9 0xD88C6 0xDA3B9 0xDB647 0xF5936 0xF757A 0xFB09D 0xFB96D 0x10FBC1 0x10FE5A 0x110144 0x118815 0x11D37E 0x11F8D6 0x1275E4 0x1278AB 0x12824D 0x128514 0x3BF8E3 0x45724B 0x458106 0x482D63 0x4A7297 0x4B5FF0 BEGIN
				READ_LONG address check_v
				PATCH_IF (%check_v% == %replace_pattern%) BEGIN
					WRITE_LONG address %replace_value%
				END ELSE BEGIN
					PATCH_PRINT @103005 // ~failed at %address%~
					PATCH_PRINT @103006 // ~found %check_v%, should be %replace_pattern%~
					SET fail = 1
				END
			END
		END

	ACTION_IF (fail == 1) BEGIN
		FAIL @103008 // ~Error: could not determine which version of BG2 you are using. Please double check that you installed the v26498 patch (if you have ToB) or the v24037 patch (if you have SoA only).~
	END

END


/* ===== *
 *  IWD  *
 * ===== */

ACTION_IF (is_iwd) BEGIN // GAME_IS ~totlm how~

	COPY ~IDMain.exe~ ~IDMain.exe~
		// determine which version of the game is used
		PATCH_IF (SOURCE_SIZE == 6873088) BEGIN	// is IDMain 142
			PATCH_PRINT @103009 // ~IWD v1.4.2 found (TotL).~
			PATCH_SILENT
			SET replace_pattern = 0x00A2156C
			SET replace_value = 0x00A658D4
			// write new links TotL
			PATCH_FOR_EACH address IN 0x9AE4A 0xC869F 0xCAC69 0xE44B6 0xECB4A 0x100AA6 0x101693 0x10193B 0x101C10 0x107294 0x206FBC 0x23DF87 0x23E0FD 0x441346 0x442238 0x46B437 0x48B7EF 0x48B9AD 0x48BE8B 0x497411 0x4B0A19 0x4B2074 BEGIN
				READ_LONG address check_v
				PATCH_IF (%check_v% == %replace_pattern%) BEGIN
					WRITE_LONG address %replace_value%
				END ELSE BEGIN
					PATCH_PRINT @103005 // ~failed at %address%~
					PATCH_PRINT @103006 // ~found %check_v%, should be %replace_pattern%~
					SET fail = 1
				END
			END
		END
		ELSE PATCH_IF (SOURCE_SIZE == 6840320) BEGIN	// is IDMain 141
			PATCH_PRINT @103010 // ~IWD v1.4.1 found (HoW).~
			PATCH_SILENT
			SET replace_pattern = 0x00A19254
			SET replace_value = 0x00A5D104
			// write new links HoW
			PATCH_FOR_EACH address IN 0x98D58 0xC615F 0xC8729 0xE1DAE 0xEA442 0xFE385 0xFEF72 0xFF21A 0xFF4EF 0x104B73 0x2386B7 0x23882D 0x43A50E 0x43B400 0x4646E6 0x48485D 0x484A1B 0x484EF9 0x490365 0x4A996D 0x4AAFC8 BEGIN
			READ_LONG address check_v
				PATCH_IF (%check_v% == %replace_pattern%) BEGIN
					WRITE_LONG address %replace_value%
				END ELSE BEGIN
					PATCH_PRINT @103005 // ~failed at %address%~
					PATCH_PRINT @103006 // ~found %check_v%, should be %replace_pattern%~
					SET fail = 1
				END
			END
		END

	ACTION_IF (fail == 1) BEGIN
		FAIL @103011 // ~Error: could not determine which version of IWD you are using. Make sure your game is patched to 1.4.1 (HoW) or 1.4.2 (TotL).~
	END

END


/* ====== *
 *  IWD2  *
 * ====== */

ACTION_IF (is_iwd2) BEGIN // GAME_IS ~iwd2~

	COPY ~iwd2.exe~ ~iwd2.exe~
		// trial and error
		PATCH_IF (SOURCE_SIZE == 5029888) BEGIN	// is IWD2
			PATCH_PRINT @103012 // ~IWD v2.0.1.0 found.~
			PATCH_SILENT
			SET replace_pattern = 0x0085E8D8
			SET replace_value = 0x008A47D4
			// write new links IWD2 standard
			PATCH_FOR_EACH address IN 0x656D5 0x82E89 0x84C3B 0xA44D4 0xA4CB3 0xA4D4F 0xA4EB1 0xA5658 0xA56E5 0xA5A24 0xA60E3 0xA62BA 0xA6381 0xA6440 0xA7EDF 0xAAEA9 0xAB2F6 0xADF48 0xAE069 0xAED84 0xAEDD7 0xAF555 0xAF698 0xAF877 0xB1395 0xB151D 0xB16BC 0xB25E8 0xB2A8E 0xB53EE 0xB565E 0xB5801 0xB5C54 0xB5F0B 0xB6188 0xB6688 0xB80E1 0xB8281 0xB88C1 0xBA975 0xBAA91 0xBABC5 0xBAE61 0xBBC87 0xC02D1 0xC040A 0x1848E6 0x184973 0x30208B 0x302A0A 0x31E08C 0x3349CC 0x334D60 0x334FC4 0x33C5B7 0x36587D BEGIN
				READ_LONG address check_v
				PATCH_IF (%check_v% == %replace_pattern%) BEGIN
					WRITE_LONG address %replace_value%
				END ELSE BEGIN
					PATCH_PRINT @103005 // ~failed at %address%~
					PATCH_PRINT @103006 // ~found %check_v%, should be %replace_pattern%~
					SET fail = 1
				END
			END
		END
		PATCH_IF (%tryweird% == 1) BEGIN	// is odd
			PATCH_PRINT @103013 // ~Normal patch failed, weird IWD2.exe suspected. Trying alternate patch.~
			PATCH_SILENT
			SET replace_pattern = 0x0085E8D8
			SET replace_value = 0x008A47D4
			// write new links IWD2 Weird
			PATCH_FOR_EACH address IN 0x654B5 0x82C09 0x849BB 0xA4244 0xA4A63 0xA4AFF 0xA4C61 0xA53F8 0xA5485 0xA57C4 0xA5E83 0xA603A 0xA6101 0xA61C0 0xA7C4F 0xAAC19 0xAB066 0xADC98 0xADDB9 0xAEAE4 0xAEB37 0xAF2B5 0xAF428 0xAF607 0xB1125 0xB12AD 0xB144C 0xB2358 0xB275E 0xB50BE 0xB52FE 0xB54A1 0xB58F4 0xB5BAB 0xB5E28 0xB6328 0xB7D81 0xB7F21 0xB85F1 0xBA6A5 0xBA7C1 0xBA8F5 0xBAB91 0xBB987 0xBFFD1 0xC010A 0x184706 0x184793 0x301EEB 0x30286A 0x31DE6C 0x3347BC 0x334B50 0x334DB4 0x33C3BE 0x36578D BEGIN
				READ_LONG address check_v
				PATCH_IF (%check_v% == %replace_pattern%) BEGIN
					WRITE_LONG address %replace_value%
				END ELSE BEGIN
					PATCH_PRINT @103005 // ~failed at %address%~
					PATCH_PRINT @103006 // ~found %check_v%, should be %replace_pattern%~
					SET fail = 1
				END
			END
		END

	ACTION_IF (fail == 1) BEGIN
		FAIL @103014 // ~Error: Unknown type of IWDII executable.~
	END

END


/* =============== *
 *  Write colours  *
 * =============== */

ACTION_IF (is_bg2 OR is_tob OR is_tutu) BEGIN // GAME_IS ~bg2 tob tutu tutu_totsc ca~

	COPY ~bgmain.exe~ ~bgmain.exe~
		// determine which version of the game is used, and set the base offset accordingly
		PATCH_IF (SOURCE_SIZE == 7839790 || SOURCE_SIZE == 7843840) BEGIN	// ToB v26498
			SET base_off = 0x7037b0
		END
		ELSE PATCH_IF (SOURCE_SIZE == 7417902) BEGIN						// SoA v23037
			SET base_off = 0x6A1728
		END ELSE BEGIN
			PATCH_PRINT @103008 // ~Error: could not determine which version of BG2 you are using. Please double check that you installed the v26498 patch (if you have ToB) or the v24037 patch (if you have SoA only).~
			SET fail = 1
		END

		PATCH_IF (fail == 0) BEGIN
			FOR (i = 0 ; i < 256 ; ++i) BEGIN
				SET rdgrd = $gradint(~%i%~)
				WRITE_LONG (base_off + (~%i%~*4)) rdgrd
			END
		END

END

ACTION_IF (is_iwd) BEGIN // GAME_IS ~totlm how~

	COPY ~idmain.exe~ ~idmain.exe~
		// determine which version of the game is used, and set the base offset accordingly
		PATCH_IF (SOURCE_SIZE == 6873088) BEGIN			// is IDMain 142
			SET base_off = 0x6658D4
		END
		ELSE PATCH_IF (SOURCE_SIZE == 6840320) BEGIN	// is IDMain 141
			SET base_off = 0x65D104
		END ELSE BEGIN
			PATCH_PRINT @103011 // ~Error: could not determine which version of IWD you are using. Make sure your game is patched to 1.4.1 (HoW) or 1.4.2 (TotL).~
			SET fail = 1
		END

		PATCH_IF (fail == 0) BEGIN
			FOR (i = 0 ; i < 256 ; ++i) BEGIN
				SET rdgrd = $gradint(~%i%~)
				WRITE_LONG (base_off + (~%i%~*4)) rdgrd
			END
		END

END

ACTION_IF (is_iwd2) BEGIN // GAME_IS ~iwd2~

	COPY ~iwd2.exe~ ~iwd2.exe~
		// determine which version of the game is used, and set the base offset accordingly
		PATCH_IF (SOURCE_SIZE == 5029888) BEGIN	// is IWD2
			SET base_off = 0x4A47D4
		END ELSE BEGIN
			PATCH_PRINT @103014 // ~Error: Unknown type of IWDII executable.~
			SET fail = 1
		END

		PATCH_IF (fail == 0) BEGIN
			FOR (i = 0 ; i < 256 ; ++i) BEGIN
				SET rdgrd = $gradint(~%i%~)
				WRITE_LONG (base_off + (~%i%~*4)) rdgrd
			END
		END

END

ACTION_IF (fail == 1) BEGIN
	FAIL @103015 // ~Could not patch successfully.~
END


PRINT @103016 // ~Copying files...~
SILENT

COPY ~1pp/core/1pp_ext_pal/files/mpalette.bmp~ ~override~
COPY ~1pp/core/1pp_ext_pal/files/mpal256.bmp~  ~override~
COPY ~1pp/core/1pp_ext_pal/files/ranges12.bmp~ ~override~

ACTION_IF (is_iwd2) BEGIN // ~iwd2~
	PRINT @103017 // ~Copying IWDII colour tables...~
	SILENT
	COPY ~1pp/core/1pp_ext_pal/files/iwd2~ ~override~
END

ACTION_IF (is_bg2 OR is_tob OR is_tutu) BEGIN // GAME_IS ~bg2 tob tutu tutu_totsc ca~
	PRINT @103018 // ~Copying BG random colour table...~
	SILENT
	COPY ~1pp/core/1pp_ext_pal/files/bg/randcolr.2da~ ~override~
END


/* ===== *
 *  ToB  *
 * ===== */

ACTION_IF (is_tob OR is_tutu) BEGIN // GAME_IS ~tob tutu tutu_totsc ca~

	CLEAR_ARRAYS
	// BUILDING ARRAYS
	ACTION_DEFINE_ASSOCIATIVE_ARRAY binarycheck BEGIN
		0x2ff59d => 0x0c
		0x2ff5b7 => 0x6277
		0x2ff5b9 => 0x558b
		0x2ff5bb => 0xffe8
		0x2ff5bd => 0x9524
		0x2ff5bf => 0x93
		0x2ff5c0 => 0x6ff7
		0x2ff5c2 => 0x00
		0x2ff5c3 => 0x458b
		0x2ff5c5 => 0xc608
		0x2ff5c7 => 0x00
		0x2ff5c8 => 0x06
		0x2ff5c9 => 0x56eb
		0x2ff5cb => 0x4d8b
		0x2ff5cd => 0xc608
		0x2ff5cf => 0x01
		0x2ff5d0 => 0x00
		0x2ff5d1 => 0x4eeb
		0x2ff5d3 => 0x558b
		0x2ff5d5 => 0xc608
		0x2ff5d7 => 0x0202
		0x2ff5d9 => 0x46eb
		0x2ff5db => 0x458b
		0x2ff5dd => 0xc608
		0x2ff5df => 0x00
		0x2ff5e0 => 0xeb01
		0x2ff5e2 => 0x8b3e
		0x2ff5e4 => 0x084d
		0x2ff5e6 => 0x01c6
		0x2ff5e8 => 0xeb04
		0x2ff5ea => 0x8b36
		0x2ff5ec => 0x0855
		0x2ff5ee => 0x02c6
		0x2ff5f0 => 0xeb6f
		0x2ff5f2 => 0x8b2e
		0x2ff5f4 => 0x0845
		0x2ff5f6 => 0xc6
		0x2ff5f7 => 0x00
		0x2ff5f8 => 0xeb50
		0x2ff5fa => 0x8b26
		0x2ff5fc => 0x084d
		0x2ff5fe => 0x01c6
		0x2ff600 => 0xeb03
		0x2ff602 => 0x8b1e
		0x2ff604 => 0x0855
		0x2ff606 => 0x02c6
		0x2ff608 => 0xeb51
		0x2ff60a => 0x8b16
		0x2ff60c => 0x0845
		0x2ff60e => 0xc6
		0x2ff60f => 0x00
		0x2ff610 => 0xeb07
		0x2ff612 => 0x8b0e
		0x2ff614 => 0x084d
		0x2ff616 => 0x01c6
		0x2ff618 => 0xeb52
		0x2ff61a => 0x06
		0x2ff635 => 0x12
		0x2ff64f => 0x870f
		0x2ff651 => 0x95
		0x2ff652 => 0x00
		0x2ff653 => 0x00
		0x2ff654 => 0x00
		0x2ff655 => 0x558b
		0x2ff657 => 0xe4
		0x2ff658 => 0x24ff
		0x2ff65a => 0xbf95
		0x2ff65c => 0x6ff7
		0x2ff65e => 0x00
		0x2ff65f => 0x8b
		0x2ff660 => 0x45
		0x2ff661 => 0x08
		0x2ff662 => 0xc6
		0x2ff663 => 0x00
		0x2ff664 => 0xe96b
		0x2ff666 => 0x86
		0x2ff667 => 0x00
		0x2ff668 => 0x00
		0x2ff669 => 0x00
		0x2ff66a => 0x4d8b
		0x2ff66c => 0xc608
		0x2ff66e => 0x0801
		0x2ff670 => 0x7eeb
		0x2ff672 => 0x558b
		0x2ff674 => 0xc608
		0x2ff676 => 0x7202
		0x2ff678 => 0x76eb
		0x2ff67a => 0x458b
		0x2ff67c => 0xc608
		0x2ff67e => 0x00
		0x2ff67f => 0xeb09
		0x2ff681 => 0x8b6e
		0x2ff683 => 0x084d
		0x2ff685 => 0x01c6
		0x2ff687 => 0xeb0a
		0x2ff689 => 0x8b66
		0x2ff68b => 0x0855
		0x2ff68d => 0x02c6
		0x2ff68f => 0xeb55
		0x2ff691 => 0x8b5e
		0x2ff693 => 0x0845
		0x2ff695 => 0xc6
		0x2ff696 => 0x00
		0x2ff697 => 0xeb54
		0x2ff699 => 0x8b56
		0x2ff69b => 0x084d
		0x2ff69d => 0x01c6
		0x2ff69f => 0xeb0c
		0x2ff6a1 => 0x8b4e
		0x2ff6a3 => 0x0855
		0x2ff6a5 => 0x02c6
		0x2ff6a7 => 0xeb10
		0x2ff6a9 => 0x8b46
		0x2ff6ab => 0x0845
		0x2ff6ad => 0xc6
		0x2ff6ae => 0x00
		0x2ff6af => 0xeb0f
		0x2ff6b1 => 0x8b3e
		0x2ff6b3 => 0x084d
		0x2ff6b5 => 0x01c6
		0x2ff6b7 => 0xeb11
		0x2ff6b9 => 0x8b36
		0x2ff6bb => 0x0855
		0x2ff6bd => 0x02c6
		0x2ff6bf => 0xeb6c
		0x2ff6c1 => 0x8b2e
		0x2ff6c3 => 0x0845
		0x2ff6c5 => 0xc6
		0x2ff6c6 => 0x00
		0x2ff6c7 => 0xeb6a
		0x2ff6c9 => 0x8b26
		0x2ff6cb => 0x084d
		0x2ff6cd => 0x01c6
		0x2ff6cf => 0xeb71
		0x2ff6d1 => 0x8b1e
		0x2ff6d3 => 0x0855
		0x2ff6d5 => 0x02c6
		0x2ff6d7 => 0xeb0e
		0x2ff6d9 => 0x8b16
		0x2ff6db => 0x0845
		0x2ff6dd => 0xc6
		0x2ff6de => 0x00
		0x2ff6df => 0xeb0d
		0x2ff6e1 => 0x8b0e
		0x2ff6e3 => 0x084d
		0x2ff6e5 => 0x01c6
		0x2ff6e7 => 0xeb69
		0x2ff6e9 => 0x06
		0x2ff6fe => 0x1f
		0x2ff700 => 0x12
		0x2ff704 => 0xc083
		0x2ff706 => 0x8b24
		0x2ff708 => 0x084d
		0x2ff70a => 0x0188
		0x2ff70c => 0x01b8
		0x2ff70e => 0x00
		0x2ff70f => 0x00
		0x2ff710 => 0x00
		0x2ff711 => 0x62eb
		0x2ff713 => 0x7d83
		0x2ff715 => 0x22f8
		0x2ff717 => 0x127d
		0x2ff719 => 0x558b
		0x2ff71b => 0x83f8
		0x2ff71d => 0x0aea
		0x2ff71f => 0x458b
		0x2ff721 => 0x8808
		0x2ff723 => 0xb810
		0x2ff725 => 0x01
		0x2ff726 => 0x00
		0x2ff727 => 0x00
		0x2ff728 => 0x00
		0x2ff729 => 0x4aeb
		0x2ff7bf => 0xf65f
		0x2ff7c1 => 0x6f
		0x2ff7c2 => 0x00
		0x2ff7c3 => 0xf66a
		0x2ff7c5 => 0x6f
		0x2ff7c6 => 0x00
		0x2ff7c7 => 0xf672
		0x2ff7c9 => 0x6f
		0x2ff7ca => 0x00
		0x2ff7cb => 0xf67a
		0x2ff7cd => 0x6f
		0x2ff7ce => 0x00
		0x2ff7cf => 0xf682
		0x2ff7d1 => 0x6f
		0x2ff7d2 => 0x00
		0x2ff7d3 => 0xf68a
		0x2ff7d5 => 0x6f
		0x2ff7d6 => 0x00
		0x2ff7d7 => 0xf692
		0x2ff7d9 => 0x6f
		0x2ff7da => 0x00
		0x2ff7dc => 0x6ff6
		0x2ff7de => 0x00
		0x2ff7df => 0xf6a2
		0x2ff7e1 => 0x6f
		0x2ff7e2 => 0x00
		0x2ff7e3 => 0xf6aa
		0x2ff7e5 => 0x6f
		0x2ff7e6 => 0x00
		0x2ff7e7 => 0xf6b2
		0x2ff7e9 => 0x6f
		0x2ff7ea => 0x00
		0x2ff7eb => 0xf6ba
		0x2ff7ed => 0x6f
		0x2ff7ee => 0x00
		0x2ff7ef => 0xf6c2
		0x2ff7f1 => 0x6f
		0x2ff7f2 => 0x00
		0x2ff7f3 => 0xf6ca
		0x2ff7f5 => 0x6f
		0x2ff7f6 => 0x00
		0x2ff7f7 => 0xf6d2
		0x2ff7f9 => 0x6f
		0x2ff7fa => 0x00
		0x2ff7fb => 0xf6da
		0x2ff7fd => 0x6f
		0x2ff7fe => 0x00
		0x2ff7ff => 0xf6e2
		0x2ff801 => 0x6f
		0x2ff802 => 0x00
		0x337e6f => 0x0c
		0x337e89 => 0x6277
		0x337e8b => 0x558b
		0x337e8d => 0xffe8
		0x337e8f => 0x9524
		0x337e91 => 0x65
		0x337e92 => 0x7380
		0x337e94 => 0x00
		0x337e95 => 0x458b
		0x337e97 => 0xc608
		0x337e99 => 0x00
		0x337e9a => 0xeb06
		0x337e9c => 0x8b56
		0x337e9e => 0x084d
		0x337ea0 => 0x01c6
		0x337ea2 => 0x00
		0x337ea3 => 0x4eeb
		0x337ea5 => 0x558b
		0x337ea7 => 0xc608
		0x337ea9 => 0x0202
		0x337eab => 0x46eb
		0x337ead => 0x458b
		0x337eaf => 0xc608
		0x337eb1 => 0x00
		0x337eb2 => 0xeb01
		0x337eb4 => 0x8b3e
		0x337eb6 => 0x084d
		0x337eb8 => 0x01c6
		0x337eba => 0xeb04
		0x337ebc => 0x8b36
		0x337ebe => 0x0855
		0x337ec0 => 0x02c6
		0x337ec2 => 0xeb6f
		0x337ec4 => 0x8b2e
		0x337ec6 => 0x0845
		0x337ec8 => 0xc6
		0x337ec9 => 0x00
		0x337eca => 0xeb50
		0x337ecc => 0x8b26
		0x337ece => 0x084d
		0x337ed0 => 0x01c6
		0x337ed2 => 0xeb03
		0x337ed4 => 0x8b1e
		0x337ed6 => 0x0855
		0x337ed8 => 0x02c6
		0x337eda => 0xeb51
		0x337edc => 0x8b16
		0x337ede => 0x0845
		0x337ee0 => 0xc6
		0x337ee1 => 0x00
		0x337ee2 => 0xeb07
		0x337ee4 => 0x8b0e
		0x337ee6 => 0x084d
		0x337ee8 => 0x01c6
		0x337eea => 0xeb52
		0x337eec => 0x06
		0x337f07 => 0x12
		0x337f21 => 0x870f
		0x337f23 => 0x95
		0x337f24 => 0x00
		0x337f25 => 0x00
		0x337f26 => 0x00
		0x337f27 => 0x558b
		0x337f29 => 0xe4
		0x337f2a => 0x24ff
		0x337f2c => 0x9195
		0x337f2e => 0x7380
		0x337f30 => 0x00
		0x337f31 => 0x8b
		0x337f32 => 0x45
		0x337f33 => 0x08
		0x337f34 => 0xc6
		0x337f35 => 0x00
		0x337f36 => 0xe96b
		0x337f38 => 0x86
		0x337f39 => 0x00
		0x337f3a => 0x00
		0x337f3b => 0x00
		0x337f3c => 0x4d8b
		0x337f3e => 0xc608
		0x337f40 => 0x0801
		0x337f42 => 0x7eeb
		0x337f44 => 0x558b
		0x337f46 => 0xc608
		0x337f48 => 0x7202
		0x337f4a => 0x76eb
		0x337f4c => 0x458b
		0x337f4e => 0xc608
		0x337f50 => 0x00
		0x337f51 => 0xeb09
		0x337f53 => 0x8b6e
		0x337f55 => 0x084d
		0x337f57 => 0x01c6
		0x337f59 => 0xeb0a
		0x337f5b => 0x8b66
		0x337f5d => 0x0855
		0x337f5f => 0x02c6
		0x337f61 => 0xeb55
		0x337f63 => 0x8b5e
		0x337f65 => 0x0845
		0x337f67 => 0xc6
		0x337f68 => 0x00
		0x337f69 => 0xeb54
		0x337f6b => 0x8b56
		0x337f6d => 0x084d
		0x337f6f => 0x01c6
		0x337f71 => 0xeb0c
		0x337f73 => 0x8b4e
		0x337f75 => 0x0855
		0x337f77 => 0x02c6
		0x337f79 => 0xeb10
		0x337f7b => 0x8b46
		0x337f7d => 0x0845
		0x337f7f => 0xc6
		0x337f80 => 0x00
		0x337f81 => 0xeb0f
		0x337f83 => 0x8b3e
		0x337f85 => 0x084d
		0x337f87 => 0x01c6
		0x337f89 => 0xeb11
		0x337f8b => 0x8b36
		0x337f8d => 0x0855
		0x337f8f => 0x02c6
		0x337f91 => 0xeb6c
		0x337f93 => 0x8b2e
		0x337f95 => 0x0845
		0x337f97 => 0xc6
		0x337f98 => 0x00
		0x337f99 => 0xeb6a
		0x337f9b => 0x8b26
		0x337f9d => 0x084d
		0x337f9f => 0x01c6
		0x337fa1 => 0xeb71
		0x337fa3 => 0x8b1e
		0x337fa5 => 0x0855
		0x337fa7 => 0x02c6
		0x337fa9 => 0xeb0e
		0x337fab => 0x8b16
		0x337fad => 0x0845
		0x337faf => 0xc6
		0x337fb0 => 0x00
		0x337fb1 => 0xeb0d
		0x337fb3 => 0x8b0e
		0x337fb5 => 0x084d
		0x337fb7 => 0x01c6
		0x337fb9 => 0xeb69
		0x337fbb => 0x06
	END // binary patch array

	// uncomment for game files
	// ACTION_IF (FILE_EXISTS_IN_GAME ~bgmain.exe~) BEGIN
	COPY ~bgmain.exe~ ~bgmain.exe~
		PATCH_IF (SOURCE_SIZE == 0x77a02e) BEGIN
			PHP_EACH binarycheck AS value1 => value2 BEGIN
				PATCH_IF (%value2% <= 0xFF) BEGIN
					READ_BYTE %value1_0% "check_r"
					PATCH_IF ("%check_r%" != %value2%) BEGIN
						SET fail = 1
					END
				END

				PATCH_IF (%value2% <= 0xFFFF AND %value2% >= 0x100) BEGIN
					READ_SHORT %value1_0% "check_r"
					PATCH_IF ("%check_r%" != %value2%) BEGIN
						SET fail = 1
					END
				END

				PATCH_IF (%value2% >= 0x10000) BEGIN
					READ_LONG %value1_0% "check_r"
					PATCH_IF ("%check_r%" != %value2%) BEGIN
						SET fail = 1
					END
				END
			END
		END

	// BUILDING ARRAYS
	ACTION_DEFINE_ASSOCIATIVE_ARRAY binarypatch BEGIN
		0x2ff59d => 0x22
		0x2ff5b7 => 0x558b
		0x2ff5b9 => 0x8ae8
		0x2ff5bb => 0xc88a
		0x2ff5bd => 0x6ff5
		0x2ff5bf => 0x00
		0x2ff5c0 => 0x458b
		0x2ff5c2 => 0x08
		0x2ff5c3 => 0x0888
		0x2ff5c5 => 0x5aeb
		0x2ff5c7 => 0x06
		0x2ff5c8 => 0x00
		0x2ff5c9 => 0x0102
		0x2ff5cb => 0x6f04
		0x2ff5cd => 0x0350
		0x2ff5cf => 0xe651
		0x2ff5d1 => 0xe34f
		0x2ff5d3 => 0xd0cf
		0x2ff5d5 => 0x72fe
		0x2ff5d7 => 0xed6d
		0x2ff5d9 => 0xc38a
		0x2ff5db => 0xeef3
		0x2ff5dd => 0xd3d2
		0x2ff5df => 0xc2
		0x2ff5e0 => 0xb5b4
		0x2ff5e2 => 0x8e15
		0x2ff5e4 => 0xb88c
		0x2ff5e6 => 0x5ba5
		0x2ff5e8 => 0x90cb
		0x2ff5ea => 0x9090
		0x2ff5ec => 0x9090
		0x2ff5ee => 0x9090
		0x2ff5f0 => 0x9090
		0x2ff5f2 => 0x9090
		0x2ff5f4 => 0x9090
		0x2ff5f6 => 0x9090
		0x2ff5f8 => 0x9090
		0x2ff5fa => 0x9090
		0x2ff5fc => 0x9090
		0x2ff5fe => 0x9090
		0x2ff600 => 0x9090
		0x2ff602 => 0x9090
		0x2ff604 => 0x9090
		0x2ff606 => 0x9090
		0x2ff608 => 0x9090
		0x2ff60a => 0x9090
		0x2ff60c => 0x9090
		0x2ff60e => 0x9090
		0x2ff610 => 0x9090
		0x2ff612 => 0x9090
		0x2ff614 => 0x9090
		0x2ff616 => 0x9090
		0x2ff618 => 0x9090
		0x2ff61a => 0x90
		0x2ff635 => 0x22
		0x2ff64f => 0x558b
		0x2ff651 => 0x8ae4
		0x2ff653 => 0x8a
		0x2ff654 => 0xc0
		0x2ff655 => 0x6ff7
		0x2ff657 => 0x00
		0x2ff658 => 0x458b
		0x2ff65a => 0x8808
		0x2ff65c => 0xe908
		0x2ff65e => 0x8e
		0x2ff65f => 0x00
		0x2ff660 => 0x00
		0x2ff661 => 0x00
		0x2ff662 => 0x7574
		0x2ff664 => 0x7776
		0x2ff666 => 0x7978
		0x2ff668 => 0x7a
		0x2ff669 => 0x7b
		0x2ff66a => 0x7d7c
		0x2ff66c => 0x7f7e
		0x2ff66e => 0x8180
		0x2ff670 => 0x8382
		0x2ff672 => 0x8584
		0x2ff674 => 0x8786
		0x2ff676 => 0x8b88
		0x2ff678 => 0x8d8c
		0x2ff67a => 0x918e
		0x2ff67c => 0xba92
		0x2ff67e => 0xcc
		0x2ff67f => 0xdcb8
		0x2ff681 => 0xf4c3
		0x2ff683 => 0xc78a
		0x2ff685 => 0x9090
		0x2ff687 => 0x9090
		0x2ff689 => 0x9090
		0x2ff68b => 0x9090
		0x2ff68d => 0x9090
		0x2ff68f => 0x9090
		0x2ff691 => 0x9090
		0x2ff693 => 0x9090
		0x2ff695 => 0x9090
		0x2ff697 => 0x9090
		0x2ff699 => 0x9090
		0x2ff69b => 0x9090
		0x2ff69d => 0x9090
		0x2ff69f => 0x9090
		0x2ff6a1 => 0x9090
		0x2ff6a3 => 0x9090
		0x2ff6a5 => 0x9090
		0x2ff6a7 => 0x9090
		0x2ff6a9 => 0x9090
		0x2ff6ab => 0x9090
		0x2ff6ad => 0x9090
		0x2ff6af => 0x9090
		0x2ff6b1 => 0x9090
		0x2ff6b3 => 0x9090
		0x2ff6b5 => 0x9090
		0x2ff6b7 => 0x9090
		0x2ff6b9 => 0x9090
		0x2ff6bb => 0x9090
		0x2ff6bd => 0x9090
		0x2ff6bf => 0x9090
		0x2ff6c1 => 0x9090
		0x2ff6c3 => 0x9090
		0x2ff6c5 => 0x9090
		0x2ff6c7 => 0x9090
		0x2ff6c9 => 0x9090
		0x2ff6cb => 0x9090
		0x2ff6cd => 0x9090
		0x2ff6cf => 0x9090
		0x2ff6d1 => 0x9090
		0x2ff6d3 => 0x9090
		0x2ff6d5 => 0x9090
		0x2ff6d7 => 0x9090
		0x2ff6d9 => 0x9090
		0x2ff6db => 0x9090
		0x2ff6dd => 0x9090
		0x2ff6df => 0x9090
		0x2ff6e1 => 0x9090
		0x2ff6e3 => 0x9090
		0x2ff6e5 => 0x9090
		0x2ff6e7 => 0x9090
		0x2ff6e9 => 0x90
		0x2ff6fe => 0x22
		0x2ff700 => 0x2a
		0x2ff704 => 0x888a
		0x2ff706 => 0xf662
		0x2ff708 => 0x6f
		0x2ff709 => 0x00
		0x2ff70a => 0x458b
		0x2ff70c => 0x8808
		0x2ff70e => 0x08
		0x2ff70f => 0xeb
		0x2ff710 => 0x64
		0x2ff711 => 0x9090
		0x2ff713 => 0x9090
		0x2ff715 => 0x9090
		0x2ff717 => 0x9090
		0x2ff719 => 0x9090
		0x2ff71b => 0x9090
		0x2ff71d => 0x9090
		0x2ff71f => 0x9090
		0x2ff721 => 0x9090
		0x2ff723 => 0x9090
		0x2ff725 => 0x9090
		0x2ff727 => 0x90
		0x2ff728 => 0x90
		0x2ff729 => 0x9090
		0x2ff7bf => 0x6b53
		0x2ff7c1 => 0x7208
		0x2ff7c3 => 0x0a09
		0x2ff7c5 => 0x5455
		0x2ff7c7 => 0x100c
		0x2ff7c9 => 0x6c0f
		0x2ff7cb => 0x716a
		0x2ff7cd => 0x0d0e
		0x2ff7cf => 0x9fa0
		0x2ff7d1 => 0xb9a3
		0x2ff7d3 => 0xbcba
		0x2ff7d5 => 0xac9e
		0x2ff7d7 => 0x9b8f
		0x2ff7d9 => 0x9d9c
		0x2ff7dc => 0xbda8
		0x2ff7de => 0xaa
		0x2ff7df => 0xab99
		0x2ff7e1 => 0x9098
		0x2ff7e3 => 0x9090
		0x2ff7e5 => 0x9090
		0x2ff7e7 => 0x9090
		0x2ff7e9 => 0x9090
		0x2ff7eb => 0x9090
		0x2ff7ed => 0x9090
		0x2ff7ef => 0x9090
		0x2ff7f1 => 0x9090
		0x2ff7f3 => 0x9090
		0x2ff7f5 => 0x9090
		0x2ff7f7 => 0x9090
		0x2ff7f9 => 0x9090
		0x2ff7fb => 0x9090
		0x2ff7fd => 0x9090
		0x2ff7ff => 0x9090
		0x2ff801 => 0x9090
		0x337e6f => 0x22
		0x337e89 => 0x558b
		0x337e8b => 0x8ae8
		0x337e8d => 0xc88a
		0x337e8f => 0x6ff5
		0x337e91 => 0x00
		0x337e92 => 0x458b
		0x337e94 => 0x08
		0x337e95 => 0x0888
		0x337e97 => 0x5aeb
		0x337e99 => 0x90
		0x337e9a => 0x9090
		0x337e9c => 0x9090
		0x337e9e => 0x9090
		0x337ea0 => 0x9090
		0x337ea2 => 0x90
		0x337ea3 => 0x9090
		0x337ea5 => 0x9090
		0x337ea7 => 0x9090
		0x337ea9 => 0x9090
		0x337eab => 0x9090
		0x337ead => 0x9090
		0x337eaf => 0x9090
		0x337eb1 => 0x90
		0x337eb2 => 0x9090
		0x337eb4 => 0x9090
		0x337eb6 => 0x9090
		0x337eb8 => 0x9090
		0x337eba => 0x9090
		0x337ebc => 0x9090
		0x337ebe => 0x9090
		0x337ec0 => 0x9090
		0x337ec2 => 0x9090
		0x337ec4 => 0x9090
		0x337ec6 => 0x9090
		0x337ec8 => 0x9090
		0x337eca => 0x9090
		0x337ecc => 0x9090
		0x337ece => 0x9090
		0x337ed0 => 0x9090
		0x337ed2 => 0x9090
		0x337ed4 => 0x9090
		0x337ed6 => 0x9090
		0x337ed8 => 0x9090
		0x337eda => 0x9090
		0x337edc => 0x9090
		0x337ede => 0x9090
		0x337ee0 => 0x9090
		0x337ee2 => 0x9090
		0x337ee4 => 0x9090
		0x337ee6 => 0x9090
		0x337ee8 => 0x9090
		0x337eea => 0x9090
		0x337eec => 0x90
		0x337f07 => 0x22
		0x337f21 => 0x558b
		0x337f23 => 0x8ae4
		0x337f25 => 0x8a
		0x337f26 => 0xc0
		0x337f27 => 0x6ff7
		0x337f29 => 0x00
		0x337f2a => 0x458b
		0x337f2c => 0x8808
		0x337f2e => 0xe908
		0x337f30 => 0x8e
		0x337f31 => 0x00
		0x337f32 => 0x00
		0x337f33 => 0x00
		0x337f34 => 0x9090
		0x337f36 => 0x9090
		0x337f38 => 0x9090
		0x337f3a => 0x90
		0x337f3b => 0x90
		0x337f3c => 0x9090
		0x337f3e => 0x9090
		0x337f40 => 0x9090
		0x337f42 => 0x9090
		0x337f44 => 0x9090
		0x337f46 => 0x9090
		0x337f48 => 0x9090
		0x337f4a => 0x9090
		0x337f4c => 0x9090
		0x337f4e => 0x9090
		0x337f50 => 0x90
		0x337f51 => 0x9090
		0x337f53 => 0x9090
		0x337f55 => 0x9090
		0x337f57 => 0x9090
		0x337f59 => 0x9090
		0x337f5b => 0x9090
		0x337f5d => 0x9090
		0x337f5f => 0x9090
		0x337f61 => 0x9090
		0x337f63 => 0x9090
		0x337f65 => 0x9090
		0x337f67 => 0x9090
		0x337f69 => 0x9090
		0x337f6b => 0x9090
		0x337f6d => 0x9090
		0x337f6f => 0x9090
		0x337f71 => 0x9090
		0x337f73 => 0x9090
		0x337f75 => 0x9090
		0x337f77 => 0x9090
		0x337f79 => 0x9090
		0x337f7b => 0x9090
		0x337f7d => 0x9090
		0x337f7f => 0x9090
		0x337f81 => 0x9090
		0x337f83 => 0x9090
		0x337f85 => 0x9090
		0x337f87 => 0x9090
		0x337f89 => 0x9090
		0x337f8b => 0x9090
		0x337f8d => 0x9090
		0x337f8f => 0x9090
		0x337f91 => 0x9090
		0x337f93 => 0x9090
		0x337f95 => 0x9090
		0x337f97 => 0x9090
		0x337f99 => 0x9090
		0x337f9b => 0x9090
		0x337f9d => 0x9090
		0x337f9f => 0x9090
		0x337fa1 => 0x9090
		0x337fa3 => 0x9090
		0x337fa5 => 0x9090
		0x337fa7 => 0x9090
		0x337fa9 => 0x9090
		0x337fab => 0x9090
		0x337fad => 0x9090
		0x337faf => 0x9090
		0x337fb1 => 0x9090
		0x337fb3 => 0x9090
		0x337fb5 => 0x9090
		0x337fb7 => 0x9090
		0x337fb9 => 0x9090
		0x337fbb => 0x90
	END // binary patch array

	// uncomment for game files
	// ACTION_IF (FILE_EXISTS_IN_GAME ~bgmain.exe~) BEGIN
	COPY ~bgmain.exe~ ~bgmain.exe~
		PATCH_IF (SOURCE_SIZE == 0x77a02e) BEGIN
			PHP_EACH binarypatch AS value1 => value2 BEGIN
				PATCH_IF (%value2% <= 0xFF) BEGIN
					WRITE_BYTE %value1_0%  %value2%
				END

				PATCH_IF (%value2% <= 0xFFFF AND %value2% >= 0x100) BEGIN
					WRITE_SHORT %value1_0%  %value2%
				END

				PATCH_IF (%value2% >= 0x10000) BEGIN
					WRITE_LONG %value1_0%  %value2%
				END
			END
		END
		ELSE BEGIN
			PATCH_PRINT @103019 // ~Error: the source size does not seem to match. Stopping installation for safety purposes.~
			PATCH_FAIL  @103020 // ~Could not patch successfully. Make sure you are using the component for the right version!~
		END
	// END// uncomment for game files (end of EXISTS_IN)

	ACTION_IF (fail = 1) BEGIN
		FAIL @103021 // ~ Error: Executable does not appear to be compatible.~
	END

	CLEAR_ARRAYS

END // END IS BG2 ToB

// END of COMPONENT